
https://lokalise.com/blog/angular-i18n/
https://stackoverflow.com/questions/60855458/how-use-xmb-translate-files-on-angular-9


1 Vagy statikus local-t használ az app: main modulnam a language file-ket kézzel importáljuk be: registerLocaleData(localeFr, 'fr'); registerLocaleData(localeHu, 'hu');
    és a localt-t manuálisan "égetjük be" az appba:  {provide: LOCALE_ID, useValue: "fr_FR"},

2. Dinamikusan választható locale: A fentieket kitöröljük a a app.module.ts-ből.


    1) Put the i18n tags in the html

    2) ng xi18n --output-path src/locale --format=xmb

    3) Copy the messages.xmb to another called messesage.it.xmb

    4) Config the angular json to new translate

    "it": {
            "aot": true,
            "outputPath": "dist/it/",
            "i18nFile": "src/locale/messages.it.xmb",
            "i18nFormat": "xmb",
            "i18nLocale": "it",
            "i18nMissingTranslation": "error"
        }

  ng add @angular/localize

   ng extract-i18n --format=xmb

   angular.json:
     "i18n": {
        "sourceLocale": "en-US",
        "locales": {
        "de": "messages.de.xmb",
        "fr": "messages.hu.xmb"
        }
      },

    és még:
        "architect": {
            "build": {
            "options": {
            // ...
            "aot": true,
            "localize": true

    ng build : ez valamennyi locale -al egy új app-ot buidlel le.

    HIBA : An unhandled exception occurred: Unsupported translation file format in D:\Angular\AngPrime\SportStoreAngular10-primeng\messages.de.xmb. 
    Megoldas: 

